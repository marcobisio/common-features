<Project>
  <ItemGroup>
    <TypeScriptCompile Remove="node_modules\**;obj\**;out\**;dist\**"></TypeScriptCompile>
  </ItemGroup>
  <Import Project="$(SerenitySrc)Serenity.Net.Web\Serenity.Net.Web.targets" />
  <Import Project="$(SerenitySrc)RestoreNpmPackages.targets" />
  <Target Name="TransformInitTools" BeforeTargets="BeforeBuild" Condition="!Exists('$(DotnetToolManifestFile)')">
    <Exec Command="dotnet new tool-manifest" ContinueOnError="true" WorkingDirectory="$(MSBuildProjectDirectory)\..\" />
    <Exec Command="dotnet tool install sergen" ContinueOnError="true" WorkingDirectory="$(MSBuildProjectDirectory)\..\" />
  </Target>
  <Target Name="TransformToolRestore" AfterTargets="BeforeBuild" Inputs="$(DotnetToolManifestFile)" Outputs="$(DotnetToolRestoreStamp)"
          Condition="'$(DotNetSergen)' == 'dotnet sergen' And ('$(SergenTransform)' != '' OR Exists('tsconfig.json'))">
    <Exec Command="dotnet tool restore" ContinueOnError="true" />
    <Touch Files="$(DotnetToolRestoreStamp)" AlwaysCreate="true" />
  </Target>
  <Target Name="CalculateTSBuildInputs">
    <ItemGroup>
      <TSBuildInputs Include="@(TypeScriptCompile)"
          Condition="'%(TypeScriptCompile.Identity)' != 'wwwroot\index.d.ts'" />
    </ItemGroup>
  </Target>
  <Target Name="CompileProjectTSConfig" AfterTargets="AfterBuild" DependsOnTargets="NpmInstall;RestoreTypings;CalculateTSBuildInputs;"
          Condition="'$(SkipNodeScripts)' != 'true' And Exists('tsconfig.json') And '$(BuildingProject)' != 'false' And '$(DesignTimeBuild)' != 'true'"
          Inputs="@(TSBuildInputs)" Outputs="@(TSBuildOutputs)">
    <Message Text="Executing TypeScript compiler..." Importance="high"></Message>
    <Exec Command="node &quot;$(TSJavaScriptFile.Replace('build\\..\tools\', 'tools\'))&quot; -p ./tsconfig.json" Condition="!Exists('tsbuild.js')" ContinueOnError="true" />
    <Exec Command="pnpm tsbuild" Condition="Exists('tsbuild.js')" ContinueOnError="true" />
  </Target>
  <Target Name="IncludeTypingsToPackage" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <None Include="@(TypingsToPackage)" Pack="true" PackagePath="%(TypingsToPackage.PackagePath)" />
    </ItemGroup>
  </Target>
  <Target Name="AddJsonLocalTextAssetsAttribute" BeforeTargets="CoreGenerateAssemblyInfo" Condition="Exists('wwwroot\texts')">
    <ItemGroup>
      <AssemblyAttribute Include="Serenity.ComponentModel.JsonLocalTextAssets">
        <_Parameter1>$(StaticWebAssetBasePath)/texts</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
</Project>